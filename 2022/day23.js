console.log("%cDay 23", 'color: #ff4400');

const day23Arr = `####.##.#..#..#...#..#.#..#..#.##.##.####.#..#.#....###.....####..#.#..#
.##.#..#...#...#....#...#..#.##....#.#..#.#..#.####.........#.#....####.
#.#..#.#..#....###..#.#.#.....####.##....#.##...#.##..#..#..#..######.##
.#.##......#.#..#...###..###.#....####..##..####.#..##.###..#..##.##.#.#
#####.####.####.###.###.###..###...#.##......##...###.####.....##.#.##..
.....####.#..###.##.###.###.....###.#.##.#..##..##.#...#.#..#.##.#...#.#
###..#..#..#..#.#..#...#..#.##..#..#.....#....##.########..##.###.#....#
..#....###..##.####.#..#......##.#..####...#.....#..###..###......#.#...
####.....#..##....##...#..##..#.#####..####.####....##.####.#...###...#.
######.....##..#..#...#..###.#.#..#.##..#..#.....########..#....#.#.###.
##...####.###.####.##.###.#..###.#####....##..###......#....###...##...#
....#...#.#.##...#.#.###...##.#.#.#.##.#.##.###.#####.#.####.##.#####.#.
.#.##.####.#.....#.##.##.#......#.#.#.##..#.##.####...#.#..#.#######.#.#
#..#.#..##......#....#..##.#...####.#.#...#....#..####...#.#.##..#.###.#
#.##..#.###..###..##.###..#..###.#....#.#.########..##..#.##.###.##..#.#
.######.#.......#.##....#.###....##.##.#..##.#....#..##...#..#..#.##...#
...#.###..###.######...####.##..###.#...####.######.#.#.##..###.#.#..##.
....##....#...###..#...#.#.#.##.#..###.###...#..#..#.#.#..####...##...##
.##.##.##..#.##......###....#.###.#...#..##.#.#####...############......
.#..#.#..###.####.#..#.##..###.###.##.#.#.#.##.###......#.##..###.#.#.##
#..#....#.##..#.#.##.##.##....##..###.###..####..#.#.....#..#......##.##
#...####...##..#....#.#.#.##.....#.......##...#....#.##....##..##...##.#
####.#.#..#.##.#######.###....###..#....#.##.####..##.#...#.####.#.#.#..
............##..#..#.###...#.#.##....#######..#....#..###.....#.###...#.
##.##..##....####..#######.##.#..#....####....#.###.#.#...###....#.##.#.
.##.#..#.##.###..##.#.#.#..#...##.#...#.##.#...#.###.#...#.##....##.#...
.#.########.##.####.#.#...#....#.###..##.##.#.##.#..#.###......###..#..#
..#.#....#.#.#..##.#..###.#.###.##.##.##..#.#.#..##....#.##.#.....#.###.
..#...#.###..##..###.##..##.#..#....#.###...###...#..#.#.#.#..###.####..
###...#.#..###...##.##.###....#.#......##..............#..##.#####.##.##
###..#.##.#.########.##.####..####...##.#.#.###...##.###.#.####.#.##.###
..##.###.#.#.#.##.#.####....#.####.#.##....###.###.##.##....#..##..##...
##..##.#.#......##..#.######...##..#...#.###..#.#.##...#....#.###.##.#.#
..####...##..#..#.#...#.#.###.##..#.#.#..##.##..#..##.#######...##...##.
....#..#..#.#...##.#.##.####..#..#..#..#...###..#.####.#.##.###.###..#..
.##...#.#.##.##..###.#.#..#.#.#.....##......##.#........#####.#......##.
###.####.#...##...#.#......####.#..#......##.....#..#####...#.###.##.#.#
...##.#..#.#.###....#####..#..###.#..#..#.#..#.#.#.#####.#..####..#..###
.##.##....#.#.#.#..#######..#..#.#..#....#.####...#...#..##..#..#...#.##
#.##.#.....#...#...###.##.##.##.#..#..#.###....##.#.#..##.##.###.##..##.
#.##..#....########.#.#.....##.###.#..##.####.#.##..###.##...#.....#.#.#
#..#..##.#....##...#.....#######.###########.#...####.#...####.#.#...##.
####.#..#..#...##..##.###.#.#.##..##.##.###.####..#.##.#.#....#..#.#.#..
#..#########...##..####..###..##.#..##....#..#.#.#..##.#..#.##.#.###.#.#
#....#..#.##.##.....#####.#.......###..#.#.#...###..#...##.#..##.#..#.##
#...####..#.#...#......#....#.#.#.#.##.....#.#.##..#...#.##........#....
###........#.###..#....##.##......#..##..##...##.#.####...#.#..##..##.#.
.#.#.##.#....##.#.#.#.#.#...##.#...##..#####.##.##.###..##..#.#...##...#
###.####...#......######.###..##..##.....###...#.......#..##.#..#.#.##..
####.#..#.#.##.#####.#.#..#..####..##...#.###.##.##.##..#.###..#.#..###.
#..###..#.#.###.#.#.##.#.##....#..#.#.###.##.#.##..###..#.##.....#..##..
.#..#.##.#####..#.....#....##......#.##.##.##....##.#...#.#.##.#..#..#.#
..#...##...#..####.##..#.##.#.##..#.##.#..####.#.#####......########..##
.##.....##.##.######..#.##..#....#..#####.#.##..##..#.#.#.#..#...##..##.
##.#...###.##..##..#.#....#..#.#.#.#.##.#..#..#.#####.##.#####..##.#.#..
#.####.#..##..##...##..##.#.#......#.#####.#..####..#..########.##.###..
#.##.##.#.##...#..#..#.#...#.##.##..##......##.#####..##.#.#.#.##.##.#.#
..#....##....#..###.#####....##.#######..##..#####...#...#####.###.....#
#.#.##..####.##.#......###..##.####.#...####.#..#.#.##.#..#.###.##.#####
.##..####...###...#.##.#..#.##.######.#.##...#.##...##..##.##########...
#.##.####..######...###.##.###.####.#.#..#..#.#.#..##....#......##....#.
.###......##.##.####.#...##...#..#.#..####..#.#.##.###.#.....#.#....#.#.
#..#..#.####.#.#.#..##..#..##.##..#.#..##.#########.###.######......#.##
..#.#.#.#..#######...#.#.....######.#.#.##.#..#...#..#####..##.###.#.##.
..#.#.#..##...####.#.###.##..#.#.##.#.#....##.#####.####...##..####....#
....#.##.....##...#.##.#.###..#.#...#####....##.###..#..########.....#..
#.#.#..#.#...###...##...#..#.##..#.#..#.....###.#####.##...#.#.#...##.#.
..#.#####..##....##...##.#.##.#..#..##.#...#.##..###..#.##...#..##..##..
#.###..##.#...####....###........#...###.#..##.#......###..####.#......#
#..#.#.#....#...##.##.....#..##..#.####.##.....##.#.....#.#.#....##....#
########.#.##.#..##..#...####.#.###.#.#.#.##.#.######.##.#.##....####..#
###.#...##.###.##....#..##.##..#######..###.###...#..###.##...#...#..##.`;

function day23(input) {
    input = input.split('\n').map(x => x.split(''));

    let elfPosses = [];
    for (let a = 0; a < input.length; a++) {
        for (let b = 0; b < input[a].length; b++) {
            if (input[a][b] == '#') {
                elfPosses.push([a, b]);
            }
        }
    }

    let checkMoves = [['North', -1, 0], ['South', 1, 0], ['West', 0, -1], ['East', 0, 1]];
    // console.log(input)
    loop:
    for (let _ = 0; _ < 10; _++) {
        let elfMoves = [];
        console.log(`round: ${_ + 1}`)
        // console.log([...elfPosses])

        for (let i = 0; i < elfPosses.length; i++) {
            if (!checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1]]) &&
                !checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1] - 1]) &&
                !checkArr(elfPosses, [elfPosses[i][0], elfPosses[i][1] - 1]) &&
                !checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1] - 1]) &&
                !checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1]]) &&
                !checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1] + 1]) &&
                !checkArr(elfPosses, [elfPosses[i][0], elfPosses[i][1] + 1]) &&
                !checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1] + 1])) {
                    elfMoves.push('no move');
                    continue;
            }

            const checkNorth = () => {
                if (!checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1]]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1] - 1]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1] + 1])) {
                        return true;
                }
                return false;
            }
            const checkSouth = () => {
                if (!checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1]]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1] - 1]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1] + 1])) {
                        return true;
                }
                return false;
            }
            const checkWest = () => {
                if (!checkArr(elfPosses, [elfPosses[i][0], elfPosses[i][1] - 1]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1] - 1]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1] - 1])) {
                        return true;
                }
                return false;
            }
            const checkEast = () => {
                if (!checkArr(elfPosses, [elfPosses[i][0], elfPosses[i][1] + 1]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] - 1, elfPosses[i][1] + 1]) &&
                    !checkArr(elfPosses, [elfPosses[i][0] + 1, elfPosses[i][1] + 1])) {
                        return true;
                }
                return false;
            }

            if (eval(`check${checkMoves[0][0]}()`)) {
                elfMoves.push([elfPosses[i][0] + checkMoves[0][1], elfPosses[i][1] + checkMoves[0][2]]);
                continue;
            }
            if (eval(`check${checkMoves[1][0]}()`)) {
                elfMoves.push([elfPosses[i][0] + checkMoves[1][1], elfPosses[i][1] + checkMoves[1][2]]);
                continue;
            }
            if (eval(`check${checkMoves[2][0]}()`)) {
                elfMoves.push([elfPosses[i][0] + checkMoves[2][1], elfPosses[i][1] + checkMoves[2][2]]);
                continue;
            }
            if (eval(`check${checkMoves[3][0]}()`)) {
                elfMoves.push([elfPosses[i][0] + checkMoves[3][1], elfPosses[i][1] + checkMoves[3][2]]);
                continue;
            }

            elfMoves.push('no move');
        }

        for (let j = 0; j < elfMoves.length; j++) {
            const elfMovesMinCurr = [...elfMoves.slice(0, j), ...elfMoves.slice(j + 1)];
            if (elfMoves[j] == 'no move') {
                continue;
            }

            if (checkArr(elfMovesMinCurr, elfMoves[j])) {
                continue;
            }

            elfPosses[j] = elfMoves[j];
        }

        // console.log([...elfPosses]);
        // console.log('');
        checkMoves.push(checkMoves.shift());
    }

    let yEdges = [Infinity, 0];
    let xEdges = [Infinity, 0];

    for (let k = 0; k < elfPosses.length; k++) {
        yEdges[0] = (elfPosses[k][0] < yEdges[0]) ? elfPosses[k][0] : yEdges[0];
        yEdges[1] = (elfPosses[k][0] > yEdges[1]) ? elfPosses[k][0] : yEdges[1];
        xEdges[0] = (elfPosses[k][1] < xEdges[0]) ? elfPosses[k][1] : xEdges[0];
        xEdges[1] = (elfPosses[k][1] > xEdges[1]) ? elfPosses[k][1] : xEdges[1];
    }

    let countGrid = 0;

    for (let l = yEdges[0]; l <= yEdges[1]; l++) {
        for (let m = xEdges[0]; m <= xEdges[1]; m++) {
            if (checkArr(elfPosses, [l, m])) {
                continue;
            }
            countGrid++;
        }
    }

    return countGrid;
}

function checkArr(arr, chkArr) {
    for (let i = 0; i < arr.length; i++) {
        if (arr[i] == 'no move') {
            continue;
        }
        if (arr[i][0] == chkArr[0] && arr[i][1] == chkArr[1]) {
            return true;
        }
    }
    return false;
}

// console.log(`Part one's answer is: ${day23(day23Arr)}`);
// console.log(`Part two's answer is: ${day23()}`);

console.log(`Part one's answer is: 4052`);
console.log(`Part two's answer is: null`);